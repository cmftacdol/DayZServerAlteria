// General settings
StartScreen.OnActiveGodMode = false;                        // [type: bool; default: false] Use god mode when the player has an active start screen. DISABLED BY DEFAULT DUE TO CONFILCTS WITH SOME ADMIN TOOLS like COT.
StartScreen.OnActiveIndestructible = true;                  // [type: bool; default: true] Same as StartScreen.OnActiveGodMode but did not conflict with the custom admin tools.
StartScreen.OnActiveIgnoreDamage = true;                    // [type: bool; default: true] Ignore damage while the player has an active start screen.
StartScreen.OnActiveInvisible = true;                       // [type: bool; default: true] Make player invisible while the player has an active start screen.
StartScreen.OnActiveNoClip = true;                          // [type: bool; default: true] Disable collision while the player has an active start screen.
StartScreen.OnActiveNoTargeting = true;                     // [type: bool; default: true] Disable player targeting by AI while the player has an active start screen.
StartScreen.OnActiveFreezePos = true;                       // [type: bool; default: true] Freeze player movement and position while the player has an active start screen.
StartScreen.OnActiveDisableSimulation = true;               // [type: bool; default: true] Disable player simulation while the player has an active start screen.
StartScreen.OnActiveDisableTemperature = true;              // [type: bool; default: true] Disable player temperature while the player has an active start screen.
StartScreen.OnActiveSafePos = true;                         // [type: bool; default: true] Teleport player to safe position while the player has an active start screen.
StartScreen.TeleportSafePos = "0 1000 0";                   // [type: string; default: "0 1000 0"] Sets safe position coordinates while the player has an active start screen (when StartScreen.OnActiveSafePos enabled).

// Server rules page
StartScreen.RulesPageEnabled = true;                        // [type: bool; default: true] Use server rules page on first character creation.
StartScreen.RulesPageShowAlways = false;                    // [type: bool; default: false] When true, the server rules will be displayed every time on the start screen. When false, then only at the first character creation.
StartScreen.RulesPageScrollToEnd = true;                    // [type: bool; default: true] When enabled user must scroll to the end of the rules to have ability move to the next page.
StartScreen.RulesPageTimeout = 5;                           // [type: float; default: 5] Sets the time in seconds during which the button to go to the next page will be disabled.

// Name selection page
StartScreen.NamePageEnabled = true;                         // [type: bool; default: true] Use first and last name page when creating a new character.
StartScreen.DisplayPlayerNamesMode = 0;                     // [type: int; default: 0] Displays player names when hover cursor over them. Modes: (-1) - disabled, (0) - always, (1) - dead only, (2) - when face is visible, (3) - dead only when face is visible
StartScreen.NamePageLengthMin = 3;                          // [type: int; default: 3] Minimum string length that are used as a input validator for first and last names.
StartScreen.NamePageLengthMax = 16;                         // [type: int; default: 16] Maximum string length that are used as a input validator for first and last names.
StartScreen.LastNameEnabled = true;                         // [type: bool; default: true] When true in addition to the first name the player will be required to enter a last name.
StartScreen.UniqNameChecks = true;                          // [type: bool; default: true] Checks the input characters name for uniqueness when entered to avoid characters with the same name on the server.

// Face selection page
StartScreen.FacePageEnabled = true;                         // [type: bool; default: true] Use face selection page when creating a new character.

// Skills selection page
StartScreen.SkillsPageEnabled = true;                       // [type: bool; default: true] Use start skills selection page when creating a new character (only for TerjeSkills mod).
StartScreen.SkillsPagePoints = 10;                          // [type: int; default: 10] The number of points that player can allocate to select skill levels.

// Loadout selection page
StartScreen.LoadoutPageEnabled = true;                      // [type: bool; default: true] Use loadout selection page when character respawning.

// Respawn selection page
StartScreen.MapPageEnabled = true;                          // [type: bool; default: true] Use map respawn point selection page when character respawning.
StartScreen.MapPageAttempts = 8;                            // [type: int; default: 8] The number of attempts to found safe position for a player after reaching which the any random spawn point will be used.

// Overview character page
StartScreen.OverviewPageEnabled = true;                     // [type: bool; default: true] Use character management screen page when character respawning.
StartScreen.OverviewPageAllowDeletion = true;               // [type: bool; default: true] Allow character profile manual deletion from overview page.
StartScreen.SoulsEnabled = true;                            // [type: bool; default: true] Whether is characters soul system is enabled.
StartScreen.SoulsMaxCount = 7;                              // [type: int; default: 7] Maximum number of souls a player can accumulate.
StartScreen.SoulsAutoDelete = true;                         // [type: bool; default: true] Delete a character automatically when their amount of souls reaches zero.
StartScreen.SoulsNotifications = true;                      // [type: bool; default: true] Show notifications to player when souls count was changed.
StartScreen.SoulsDisplayBadge = false;                      // [type: bool; default: false] Show badge icon on HUD with souls count.
StartScreen.SoulsInitCount = 3;                             // [type: int; default: 3] The number of initial souls when player respawning for the first time.
StartScreen.SoulsOnKillPlayerCount = 1;                     // [type: int; default: 1] The number of souls you get for killing a player.
StartScreen.SoulsOnKillPlayerChance = 1;                    // [type: float; default: 1] The chance at which you will get souls for killing a player. Value from 0 to 1
StartScreen.SoulsOnKillAiCount = 1;                         // [type: int; default: 1] The number of souls you get for killing an AI player.
StartScreen.SoulsOnKillAiChance = 0.25;                     // [type: float; default: 0.25] The chance at which you will get souls for killing an AI player. Value from 0 to 1
StartScreen.SoulsOnKillZombieCount = 1;                     // [type: int; default: 1] The number of souls you get for killing a zombie.
StartScreen.SoulsOnKillZombieChance = 0.01;                 // [type: float; default: 0.01] The chance at which you will get souls for killing a zombie. Value from 0 to 1
StartScreen.SoulsOnKillAnimalCount = 1;                     // [type: int; default: 1] The number of souls you get for killing an animal.
StartScreen.SoulsOnKillAnimalChance = 0.05;                 // [type: float; default: 0.05] The chance at which you will get souls for killing an animal. Value from 0 to 1
StartScreen.SoulsLongSurviveTime = 14400;                   // [type: int; default: 14400] The amount of continuous survival time (in seconds) after which the player will receive additional souls.
StartScreen.SoulsLongSurvivePow = 1.5;                      // [type: float; default: 1.5] The calculation of souls obtained during the survived time is based on the degree formula StartScreen.SoulsLongSurviveTime. This ensures that each next stage will be longer than the previous one by a multiple of this degree. Use 1 for linear function.
StartScreen.SoulsLongSurviveCount = 1;                      // [type: int; default: 1] The number of souls you get for continuous survival.
StartScreen.SoulsLongSurviveChance = 1;                     // [type: float; default: 1] The chance at which you will get souls for continuous survival. Value from 0 to 1
StartScreen.SoulsGainTimeout = -1;                          // [type: int; default: -1] Sets the timeout (in seconds) for a player to obtain new souls to prevent souls farming. Disabled by default (-1)

// Passport settings
StartScreen.PassportSpawn = false;                          // [type: bool; default: false] Spawn player passport on respawn.
StartScreen.PassportSpawnOnce = false;                      // [type: bool; default: false] When enabled passport will be spawn in the players inventory only once after the character was created.
StartScreen.PassportUniqNumber = false;                     // [type: bool; default: false] Generate unique number for each individual passport item when enabled, otherwise steam profile hash.
StartScreen.PassportShowNumber = true;                      // [type: bool; default: true] Show passport number on passport view.
StartScreen.PassportShowGender = true;                      // [type: bool; default: true] Show player gender on passport view.
